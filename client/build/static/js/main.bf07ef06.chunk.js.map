{"version":3,"sources":["components/Header/logo.png","firebaseConfig.js","components/Form.js","components/Login.js","components/Navbar/index.js","utils/API.js","components/SearchInput/index.js","components/Header/index.js","components/Wrapper/index.js","components/Footer/index.js","components/Maps/index.js","components/Modal/index.js","components/Cards/index.js","pages/Home/index.js","pages/Favorites/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAppAuth","firebase","firebaseConfig","auth","providers","googleProvider","GoogleAuthProvider","onAuthStateChanged","user","console","log","displayName","email","uid","Axios","post","name","uuid","then","data","status","emailVerified","this","setState","isLoggedIn","useStyles","makeStyles","theme","container","display","flexWrap","input","margin","spacing","Inputs","state","classes","props","signOut","signInWithGoogle","handleLogin","className","Grid","item","xs","sm","variant","color","button","onClick","React","Component","withFirebaseAuth","modal","position","overflow","height","padding","paper","width","backgroundColor","palette","background","boxShadow","shadows","outline","border","top","left","fontFamily","Login","useState","open","setOpen","Button","Modal","aria-labelledby","aria-describedby","onClose","id","Form","toolbar","root","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","drawer","flexShrink","fontSize","drawerPaper","drawerHeader","alignItems","mixins","justifyContent","title","Navbar","useTheme","AppBar","Toolbar","IconButton","edge","aria-label","Typography","style","textDecoration","href","Drawer","anchor","direction","Divider","List","ListItem","key","Link","getCampground","query","axios","get","getWeather","lat","lon","cnt","getTrails","lng","result","deleteFavorite","delete","saveFavorite","parkCode","getFavorites","getFavoriteCampgrounds","favorites","campgroundPromises","map","favorite","find","campground","campgroundId","Promise","all","suggestions","label","renderInputComponent","inputProps","inputRef","ref","other","TextField","fullWidth","InputProps","node","renderSuggestion","suggestion","isHighlighted","matches","match","parts","parse","MenuItem","selected","component","part","text","fontWeight","highlight","getSuggestionValue","suggestionsContainerOpen","zIndex","marginTop","right","suggestionsList","listStyleType","divider","SearchInput","single","popper","stateSuggestions","setSuggestions","autosuggestProps","onSuggestionsFetchRequested","value","inputValue","deburr","trim","toLowerCase","inputLength","length","count","filter","keep","slice","getSuggestions","onSuggestionsClearRequested","placeholder","onChange","event","newValue","onKeyDown","handleLoading","API","res","handleCampgrounds","catch","err","error","renderSuggestionsContainer","options","Paper","containerProps","square","children","Header","src","logo","alt","Wrapper","Footer","googleMapsClient","require","createClient","MapWithMarker","withScriptjs","withGoogleMap","center","defaultZoom","Maps","setPosition","useEffect","geocode","address","response","json","results","geometry","location","googleMapURL","loadingElement","containerElement","mapElement","textAlign","trailLink","MyModal","trails","setTrails","latLong","parseFloat","size","buttonStyle","borderRadius","Container","maxWidth","description","directionsoverview","accessibility","adainfo","firestovepolicy","weatheroverview","trail","imgSmallMed","stars","summary","url","target","rel","card","flexDirection","noResults","MapCard","setFavorites","justify","campgrounds","md","Card","CardActionArea","CardContent","gutterBottom","flex","CardActions","cursor","includes","concat","Home","loading","LinearProgress","Cards","Favorites","componentDidMount","CircularProgress","App","isLogged","localStorage","setItem","JSON","stringify","path","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf07ef06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b87d541f.png\";","const config = {\n    apiKey: \"AIzaSyCMS2aKWCzeYoOQ32IRncXYNo139cEYS8o\",\n    authDomain: \"campsearch-3f400.firebaseapp.com\",\n    databaseURL: \"https://campsearch-3f400.firebaseio.com\",\n    projectId: \"campsearch-3f400\",\n    storageBucket: \"campsearch-3f400.appspot.com\",\n    messagingSenderId: \"406169783106\",\n    appId: \"1:406169783106:web:08913bc09d6045158d96db\",\n    measurementId: \"G-SFW2XRVHGS\"\n};\nexport default config;","import React from 'react';\n//import { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n//import Input from '@material-ui/core/Input';\n//import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n//import { FirebaseDatabaseProvider } from \"@react-firebase/database\";\nimport withFirebaseAuth from 'react-with-firebase-auth'\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from '../firebaseConfig';\nimport Axios from 'axios';\nimport GoogleButton from 'react-google-button'\n// import withStyles\n// var $ = require(\"jQuery\")\n\n\n\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n// var database = firebase.database();\n\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n    googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n// const db = firebase.database();\n// const dbRef = db.ref().child(\"data\");\n\n// dbRef.on(\"value\",snapshot =>{\n//     this.setState({\n//         data:snapshot.val()\n//     })\n// })\n\n// var email = {},\n// var \n\nfirebaseAppAuth.onAuthStateChanged(function (user) {\n\n    console.log(\"Auth state change noted\", user);\n    // If there's a user logged in:\n    if (user) {\n\n        // log user info to the console\n        console.log(\"user is signed in!\");\n        console.log(\"USER: \", user);\n        console.log(user.displayName)\n        console.log(user.email)\n        console.log(user.uid)\n\n        Axios.post(\"/api/createusers\",\n            {\n                name: user.displayName,\n                email: user.email,\n                uuid: user.uid\n            }).then(function (data, status) {\n                console.log(\"HIIIIIIIIII\")\n                if (user.emailVerified) {\n                    this.setState({\n                        isLoggedIn: true\n                    })\n                    console.log(\"HI YOU CAN SEE ME\")\n                }\n                else {\n                    console.log(\"YOU CANNOT SEE ME\")\n                }\n                // alert(\"Data: \" + data + \"\\nStatus: \" + status);\n            });\n\n\n        // access logged in user's data\n        //   database.ref(\"/\" + user.uid).once(\"value\").then(function (snapshot) {\n        //     // log all user's info to console\n        // console.log(\"User Authenticated Data from Firebase:\", snapshot.val());\n\n\n        // Send the user data to SQL - for now, just send user id, email, AND DISPLAY NAME (if they're not in the SQL DB already)\n\n        //   });\n\n    } else {\n        // if no user logged in, then redirect them back to sign in page\n        //   window.location.href = \"/React-FirebaseGoogle-Test\";\n\n        console.log(\"User not signed in\")\n    }\n});\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    input: {\n        margin: theme.spacing(1),\n    },\n}));\n\n\nclass Inputs extends React.Component {\n\n    state = {\n        isLoggedIn:false\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n\n\n        const classes = useStyles;\n        const {\n            user,\n            signOut,\n            signInWithGoogle,\n            handleLogin,\n        } = this.props;\n        var name = \"\";\n\n        return (\n            <div className={classes.container}>\n\n                {/* <Input\n                    placeholder=\"Username\"\n                    className={classes.input}\n                    inputProps={{\n                        'aria-label': 'description',\n                    }}\n                />\n                <Input\n                    placeholder=\"Password\"\n                    className={classes.input}\n                    inputProps={{\n                        'aria-label': 'description',\n                    }}\n                /> */}\n                <Grid container spacing={3}>\n                    <Grid item xs={12}  >\n                        {\n                            user ? name = user.displayName : name = \"\"\n                        }\n                        {/* {\n                            user\n                            \n                                ? <p>Hello, {user.displayName}</p>\n                            : <p></p>\n                        } */}\n                    </Grid>\n                    <Grid item xs={12} sm={3} >\n                        {\n                            user\n                                ? <button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => {signOut(); handleLogin(name, false)}}>Sign out</button>\n                                : < GoogleButton variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => {signInWithGoogle(); handleLogin(name, true)}}></GoogleButton>\n                        }\n                    </Grid>\n                    {/* <Grid item xs={12} sm={6}>\n                        <Button id=\"sign-up\" variant=\"contained\" color=\"primary\" className={classes.button}>\n                            Sign Up\n      </Button>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Button id=\"login\" variant=\"contained\" color=\"primary\" className={classes.button}>\n                            Sign In\n      </Button>\n                    </Grid> */}\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withFirebaseAuth({\n    providers,\n    firebaseAppAuth,\n})(Inputs);","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Form from './Form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n    modal: {\n        position: \"absolute\",\n        overflow: \"scroll\",\n        height: \"100%\",\n        display: \"block\",\n        padding: \"20px\"\n    },\n    paper: {\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 4),\n        outline: 'none',\n        border: 'none',\n        position: 'absolute',\n        top: \"35%\",\n        left: \"35%\",\n        fontFamily: \"Red Hat Display, sans-serif\"\n    },\n}));\n\n\nfunction Login(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    return (\n        <div>\n            <Button  color=\"inherit\" onClick={handleOpen}>{props.isLoggedIn ? \"Logout\" : \"Login\"}</Button>\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={open}\n                onClose={handleClose}\n                className={classes.modal}\n            >\n                <div className={classes.paper}>\n                    <h2 id=\"modal-title\">Sign In</h2>\n                    <Form handleLogin ={props.handleLogin} >\n\n                    </Form>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Login from '../Login';\nimport Link from '@material-ui/core/Link';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: {\n        background: \"#b67e29\",\n    },\n    root: {\n        flexGrow: 1,\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        fontFamily: \"Red Hat Display, sans-serif\",\n        fontSize: \"22px\",\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    title: {\n        flexGrow: 1,\n    }\n\n}));\n\nfunction Navbar(props) {\n    const theme = useTheme();\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Toolbar className={classes.toolbar}>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerOpen}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            <a style={{ color: \"white\", textDecoration: \"none\" }} href=\"/\">Camp Search</a>\n                        </Typography>\n                        <Login isLoggedIn={props.isLoggedIn} handleLogin={props.handleLogin} />\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        <ListItem button key=\"Home\">\n                            <Link href=\"/\" style={{ textDecoration: \"none\", color: \"black\" }}>Home</Link>\n                        </ListItem>\n                        <ListItem button key=\"Favorites\">\n                            <Link href=\"/favorites\" style={{ textDecoration: \"none\", color: \"black\" }}>Favorites</Link>\n                        </ListItem>\n                    </List>\n                </Drawer>\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;","import axios from \"axios\";\n\n// Getting the campgrounds by their ID\nfunction getCampgroundById(parkCode) {\n    return axios\n        .get(`https://developer.nps.gov/api/v1/campgrounds?parkCode=${parkCode}&api_key=O4VdhmolNStlPLj2bo2DfPKWks3F8J9xfihpGqTf`)\n        .then(result => result.data);\n}\n\nexport default {\n    // API request from National Park Service \n    getCampground: function (query) {\n        return axios.get(`https://developer.nps.gov/api/v1/campgrounds?q=${query}&api_key=O4VdhmolNStlPLj2bo2DfPKWks3F8J9xfihpGqTf`);\n    },\n    // API request from OpenWeather \n    getWeather: function (lat, lon, cnt) {\n        return axios.get(`api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&cnt=${cnt}`)\n    },\n    // API request from Hiking Project\n    getTrails: function (lat, lng) {\n        return axios.get(`https://www.hikingproject.com/data/get-trails?lat=${lat}&lon=${lng}&maxDistance=10&key=200542336-9cc42e1d5b620d5f44636b1bd9dc58f3`)\n        .then(result => result.data);\n    },\n\n    // Save Favorites\n    // Deletes the favorite with the given id\n    deleteFavorite: function (id) {\n        return axios.delete(\"/api/favorites/\" + id);\n    },\n    // Saves a favorite to the database\n    saveFavorite: function (parkCode, id) {\n        return axios.post(\"/api/favorites\", { parkCode: parkCode, id: id });\n    },\n    // Get the saved favorite from the database\n    getFavorites: function () {\n        return axios.get(\"/api/favorites\").then(result => result.data)\n    },\n    // Get the saved favorite enriched (name, description...) from NPS data\n    getFavoriteCampgrounds: function () {\n        return this.getFavorites().then(favorites => {\n            const campgroundPromises = favorites.map(favorite => {\n                return getCampgroundById(favorite.parkCode)\n                    .then(result => result.data.find(campground => campground.id === favorite.campgroundId))\n            });\n            //Go from array of promises to a promise of array of results\n            return Promise.all(campgroundPromises)\n        })\n    }\n\n};\n","import React from 'react';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport API from \"../../utils/API\";\n\n\nconst suggestions = [\n  { label: \"Acadia\" }, { label: \"American Samoa\" }, { label: \"Arches\" },\n  { label: \"Badlands\" }, { label: \"Big Bend\" }, { label: \"Biscayne\" },\n  { label: \"Black Canyon of the Gunnison\" }, { label: \"Bryce Canyon\" }, { label: \"Cabrillo\" },\n  { label: \"Canyonlands\" }, { label: \"Capitol Reef\" }, { label: \"Carlsbad Caverns\" },\n  { label: \"Channel Islands\" }, { label: \"Congaree\" }, { label: \"Crater Lake\" },\n  { label: \"Cuyahoga Valley\" }, { label: \"Death Valley\" }, { label: \"Denali\" },\n  { label: \"Dry Tortugas\" }, { label: \"Everglades\" }, { label: \"Gates of the Arctic\" },\n  { label: \"Gettysburg National Military Park\" }, { label: \"Glacier\" }, { label: \"Glacier Bay\" },\n  { label: \"Grand Canyon\" }, { label: \"Grand Teton\" }, { label: \"Great Basin\" },\n  { label: \"Great Sand Dunes\" }, { label: \"Great Smoky Mountains\" },\n  { label: \"Guadalupe Mountains\" }, { label: \"Haleakala\" }, { label: \"Hawai’i Volcanoes\" },\n  { label: \"Harpers Ferry\" }, { label: \"Hot Springs\" }, { label: \"Isle Royale\" },\n  { label: \"Joshua Tree\" }, { label: \"Katmai\" }, { label: \"Kenai Fjords\" },\n  { label: \"Kings Canyon\" }, { label: \"Kobuk Valley\" }, { label: \"Lake Clark\" },\n  { label: \"Lassen Volcanic\" }, { label: \"Mammoth Cave\" }, { label: \"Mesa Verde\" },\n  { label: \"Mount Rainier\" }, { label: \"North Cascades\" }, { label: \"Organ Pipe Cactus\" },\n  { label: \"Olympic\" }, { label: \"Petrified Forest\" }, { label: \"Pinnacles\" }, { label: \"Redwood\" },\n  { label: \"Rocky Mountain\" }, { label: \"Saguaro\" }, { label: \"Sequoia\" },\n  { label: \"Shenandoah\" }, { label: \"Theodore Roosevelt\" }, { label: \"Valley Forge\" },\n  { label: \"Virgin Islands\" }, { label: \"Voyageurs\" }, { label: \"Wind Cave\" },\n  { label: \"Wrangell–St. Elias\" }, { label: \"Yellowstone\" }, { label: \"Yosemite\" }, { label: \"Zion\" }\n];\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component='div'>\n      <div>\n        {parts.map(part => (\n          <span key={part.text} style={{ fontWeight: part.highlight ? 500 : 400 }}>\n            {part.text}\n          </span>\n        ))}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n      const keep =\n        count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n      if (keep) {\n        count += 1;\n      }\n\n      return keep;\n    });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  divider: {\n    height: theme.spacing(2),\n  },\n}));\n\nexport default function SearchInput(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    single: '',\n    popper: '',\n  });\n\n  const [stateSuggestions, setSuggestions] = React.useState([]);\n\n  const handleSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, { newValue }) => {\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleEnter = (event) => {\n    if(event.key === 'Enter') {\n      props.handleLoading(true)\n      API.getCampground(state.single)\n        .then(res => {\n          props.handleCampgrounds(res.data.data)\n          props.handleLoading(false)\n        })\n        .catch(err => console.error(err));\n    }\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion,\n  };\n\n  return (\n    <div className={classes.root}>\n      <Autosuggest\n        {...autosuggestProps}\n        inputProps={{\n          classes,\n          id: 'react-autosuggest-simple',\n          label: 'National Parks',\n          placeholder: 'Search for a national park for camping information...',\n          value: state.single,\n          onChange: handleChange('single'),\n          onKeyDown: handleEnter,\n        }}\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion,\n        }}\n        renderSuggestionsContainer={options => (\n          <Paper {...options.containerProps} square>\n            {options.children}\n          </Paper>\n        )}\n      />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport SearchInput from '../SearchInput';\nimport './style.css';\nimport logo from '../Header/logo.png';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div id=\"j-container\">\n                <Paper id=\"jumbotron\">\n                <img id=\"logo\" src={logo} alt=\"Camp-Search\" />\n                    <SearchInput handleCampgrounds={this.props.handleCampgrounds} handleLoading={this.props.handleLoading}/>\n                </Paper>\n            </div>\n        );\n    };\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction Wrapper(props) {\n  return (\n    <main className=\"wrapper\" {...props} />\n  );\n}\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n\n    return (\n        <footer className=\"footer\">\n            <span>Camp Search © 2020</span>\n        </footer>\n    );\n}\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker } from 'react-google-maps';\n\nconst apiKey = \"AIzaSyBmSLZewBiOZn3GJAasNRzdzRYA_Bi4qyo\"\nconst googleMapsClient = require('@google/maps').createClient({ key: apiKey });\n\nconst MapWithMarker = withScriptjs(withGoogleMap(props =>\n    <GoogleMap center={props.position} defaultZoom={10} >\n        <Marker position={props.position} />\n    </GoogleMap>\n))\n\nfunction Maps(props) {\n    const [position, setPosition] = useState({ lat: 39.833333, lng: -98.583333 })\n\n    useEffect(() => {\n        if (props.position === null) {\n            googleMapsClient.geocode({ address: `${props.parkCode}, ${props.name}` }, (err, response) => {\n                if (!err) {\n                    setPosition(response.json.results[0].geometry.location)\n                } else {\n                    console.error(err)\n                }\n            });\n        } else {\n            setPosition(props.position);\n        }\n    }, [props.position, props.name, props.parkCode])\n\n    return (\n        <MapWithMarker\n            position={position}\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${apiKey}`}\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `100%`, width: `100%` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n        />\n    )\n}\n\nexport default Maps;\n","import React, { useState, useEffect } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport API from \"../../utils/API\";\n\nimport \"./style.css\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        background: \"#9D2F16\",\n        color: \"white\",\n    },\n    modal: {\n        position: \"absolute\",\n        overflow: \"scroll\",\n        height: \"100%\",\n        display: \"block\",\n        padding: \"20px\"\n    },\n    title: {\n        textAlign: \"center\",\n        background: \"#b67e29\",\n        color: \"white\",\n        padding: \"40px\"\n    },\n    trailLink: {\n        textDecoration: \"none\",\n        color: \"black\",\n    },\n    container: {\n        padding: theme.spacing(4, 8),\n    }\n}));\n\n\nfunction MyModal(props) {\n    const classes = useStyles();\n\n    //Open and close the modal\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // Trails \n    const [trails, setTrails] = useState([])\n\n    useEffect(() => {\n        const latLongString = props.campground.latLong;\n        const regex = /[\\d.-]+/g;\n        const latLong = latLongString.match(regex);\n        const position = latLong != null ? { lat: parseFloat(latLong[0]), lng: parseFloat(latLong[1]) } : null\n\n        if (position !== null) {\n            API.getTrails(position.lat, position.lng)\n                .then(trails => setTrails(trails.trails))\n                .catch(err => console.error(err));\n        }\n    }, [props.campground.latLong])\n\n    return (\n        <div style={{ margin: \"0 auto\" }}>\n            <Button onClick={handleOpen} size=\"small\" variant=\"contained\" className={classes.button} buttonStyle={{ borderRadius: 25 }}\n                style={{ borderRadius: 25 }}>Learn More\n                </Button>\n\n            <Modal className={classes.modal}\n\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={open}\n                onClose={handleClose}\n            >\n                <Container maxWidth=\"md\" className=\"modal\">\n                    <Paper className={classes.root}>\n                        <div className=\"container\">\n                            <Typography variant=\"h3\" component=\"h3\" className={classes.title}>\n                                {props.campground.name}\n                            </Typography>\n                            <br />\n                            <div className={classes.container}>\n                                <Typography component=\"p\" style={{ textAlign: \"justify\" }}>\n                                    {props.campground.description}\n                                </Typography>\n                                <br />\n                                <Typography component=\"p\">\n                                    {props.campground.directionsoverview}\n                                </Typography>\n                                <br />\n                                <Typography component=\"p\">\n                                    {props.campground.accessibility.adainfo}\n                                </Typography>\n                                <br />\n                                <Typography component=\"p\">\n                                    {props.campground.accessibility.firestovepolicy}\n                                </Typography>\n                                <br />\n                                <Typography component=\"p\">\n                                    <strong> Weather: </strong> {props.campground.weatheroverview}\n                                </Typography>\n                                <Typography style={{ textAlign: \"center\" }}>\n                                    {trails.length === 0 ? (<div></div>\n                                    ) : (\n                                            <div>\n                                                <h2>Trails</h2>\n                                                {trails.map(trail => (\n                                                    <div>\n                                                        <h3> {trail.name}</h3>\n                                                        {trail.imgSmallMed.length === 0 ? (<div></div>) : (<img src={trail.imgSmallMed} alt=\"trail\"></img>)}\n                                                        <p><strong>Rating:</strong> {trail.stars}</p>\n                                                        <p><strong>Length:</strong> {trail.length}</p>\n                                                        <p><strong>Description:</strong> {trail.summary}</p>\n\n                                                        <Button size=\"small\" variant=\"contained\" className={classes.button} buttonStyle={{ borderRadius: 25 }}\n                                                            style={{ borderRadius: 25 }}><a className={classes.trailLink} href={trail.url} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: \"white\" }}> Learn More </a>\n                                                        </Button>\n                                                        <hr></hr>\n                                                        <br></br>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </Paper>\n                </Container>\n            </Modal>\n        </div>\n    )\n}\n\nexport default MyModal; ","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Maps from '../Maps';\nimport MyModal from \"../Modal\"\nimport API from '../../utils/API'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    title: {\n        textAlign: \"center\"\n    },\n    noResults: {\n        textAlign: \"center\",\n        fontFamily: \"Red Hat Display, sans-serif\"\n    },\n}));\n\nfunction MapCard(props) {\n    const classes = useStyles();\n\n    const [favorites, setFavorites] = useState([])\n\n    useEffect(() => {\n        API.getFavorites()\n            .then(favorites => setFavorites(favorites))\n            .catch(err => console.error(err));\n    }, []);\n\n    const handleFavorite = (parkCode, id) => {\n        if (favorites.map(favorite => favorite.campgroundId).includes(id)) {\n            API.deleteFavorite(id)\n                .then(() => setFavorites(favorites.filter(favorite => favorite.campgroundId !== id)))\n                .catch(err => console.error(err));\n        } else {\n            API.saveFavorite(parkCode, id)\n                .then(() => setFavorites(favorites.concat([\n                    {\n                        parkCode: parkCode,\n                        campgroundId: id\n                    }\n                ])))\n                .catch(err => console.error(err));\n        }\n    }\n    return (\n        <div>\n            <Grid container justify=\"center\" spacing={7}>\n                {props.campgrounds.map(campground => {\n                    var latLongString = campground.latLong;\n                    var regex = /[\\d.-]+/g;\n                    var latLong = latLongString.match(regex);\n                    var position = latLong != null ? { lat: parseFloat(latLong[0]), lng: parseFloat(latLong[1]) } : null\n\n                    return (\n                        <Grid key={campground.id} item xs={12} md={4}>\n                            <Card className={classes.card}>\n                                <div style={{ height: 200 }}>\n                                    {console.log(campground)}\n                                    <Maps\n                                        position={position}\n                                        parkCode={campground.parkCode}\n                                        name={campground.name}\n                                    />\n                                </div>\n                                <CardActionArea>\n                                    <CardContent >\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\n                                            {campground.name}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                                <div style={{ flex: 1 }}></div>\n                                <CardActions style={{ textAlign: \"center\" }}>\n                                    <i className=\"material-icons\" style={{ cursor: \"pointer\", color: \"#ffc000\", fontSize: \"33px\" }} onClick={() => handleFavorite(campground.parkCode, campground.id)}>\n                                        {favorites.map(favorite => favorite.campgroundId).includes(campground.id) ? \"star\" : \"star_border\"}\n                                    </i>\n                                    <MyModal campground={campground} />\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </div>\n    );\n}\n\nexport default MapCard","import React from \"react\";\nimport Cards from \"../../components/Cards\"\nimport Container from '@material-ui/core/Container';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nclass Home extends React.Component {\n\n    render() {\n        return (\n\n            <div>\n                {this.props.loading ?\n                    <LinearProgress color=\"secondary\" /> :\n                    <Container maxWidth=\"md\" style={{ marginTop: 70 }}>\n                        <Cards campgrounds={this.props.campgrounds} />\n                    </Container>}\n            </div>\n\n        )\n    }\n}\n\nexport default Home;\n","import React from \"react\";\nimport API from \"../../utils/API\";\nimport Cards from \"../../components/Cards\"\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst title = {\n    textAlign: \"center\",\n    fontFamily: \"Red Hat Display, sans-serif\"\n};\n\nclass Favorites extends React.Component {\n\n    state = {\n        campgrounds: [],\n        loading: false\n    }\n\n    componentDidMount = () => {\n        this.setState({ loading: true })\n        API.getFavoriteCampgrounds()\n            .then(campgrounds => {\n                this.setState({ campgrounds: campgrounds, loading: false })\n            })\n            .catch(err => {\n                this.setState({ loading: false })\n                console.log(err)\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 style={title}>My favorites</h1>\n\n                <Container maxWidth=\"md\" style={{ marginTop: 70 }}>\n                    {this.state.loading ?\n                        <div style={{ textAlign: \"center\", color: \"#c63d1e\" }}>\n                            <CircularProgress color=\"secondary\" />\n                        </div> :\n                        this.state.campgrounds.length === 0 ?\n                            <h3 style={title}>You don't have any favorites</h3> :\n                            <Cards campgrounds={this.state.campgrounds} />\n                    }\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Favorites;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport Footer from \"./components/Footer\"\nimport Home from \"./pages/Home\";\nimport Favorites from \"./pages/Favorites\";\n\nclass App extends Component {\n\n  state = {\n    campgrounds: [],\n    loading: false,\n    name: \"\",\n    isLoggedIn: false,\n\n  }\n  handleLogin = (name, isLogged) => {\n    this.setState({\n      isLoggedIn: isLogged,\n    }, () => {\n      this.setState({\n        name: name\n      })\n      localStorage.setItem('name',\n      JSON.stringify(this.state.name));\n    })\n  }\n\n  handleCampgrounds = campgrounds =>\n    this.setState({ campgrounds: campgrounds })\n\n  handleLoading = loading =>\n    this.setState({ loading: loading })\n\n  render() {\n    return (\n      <Router>\n        <div id=\"app\">\n          <Navbar isLoggedIn={this.state.isLoggedIn} handleLogin={this.handleLogin} />\n          <Header handleCampgrounds={this.handleCampgrounds} handleLoading={this.handleLoading} />\n          <Wrapper>\n            <Route path=\"/\" render={props => <Home {...props} campgrounds={this.state.campgrounds} loading={this.state.loading} />} />\n            <Route path=\"/favorites\" component={Favorites} />\n          </Wrapper>\n          <Footer />\n        </div>\n      </Router>\n    )\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}